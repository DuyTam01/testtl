{"ast":null,"code":"import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{clearItem,removeItem}from'../../redux/cartSlice';import{Button,ButtonGroup,Container,Input,Table}from'reactstrap';import\"../../css/cart.css\";import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Cart(){const dispatch=useDispatch();const{items}=useSelector(state=>state.cart);const[selecteIds,setSelecteIds]=useState([]);const[isSelecteAll,setIsSelecteAll]=useState(false);const[arrayTotalPrice,setArrayTotalPrice]=useState([]);const handleSelecteAll=()=>{const newIsSelecteAll=!isSelecteAll;setIsSelecteAll(newIsSelecteAll);if(newIsSelecteAll){setSelecteIds(items.map(item=>item.id));setArrayTotalPrice(items.map(item=>item.price));}else{setSelecteIds([]);setArrayTotalPrice([]);}};const handleChangeRow=(id,price)=>{let updateSelecteIds;let updateArrayTotalPrice;if(!selecteIds.includes(id)){//thêm id vào mảng\nupdateSelecteIds=[...selecteIds,id];updateArrayTotalPrice=[...arrayTotalPrice,price];console.log(selecteIds.includes(items.id));}else{//Lọc ra bản ghi có id khác với id cần remove\nupdateSelecteIds=selecteIds.filter(row=>row!==id);updateArrayTotalPrice=arrayTotalPrice.filter(row=>row!==price);}//Cập nhật lại state cho selecteIds\nsetSelecteIds(updateSelecteIds);setArrayTotalPrice(updateArrayTotalPrice);//nếu mảng selecteIds. length = items.length =>setIsSelecteAll(true)\nsetIsSelecteAll(updateSelecteIds.length===items.length);};const sumprice=arrayTotalPrice.reduce((total,value)=>{return total+value;},0);console.log(selecteIds);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Link,{to:\"/product\",children:/*#__PURE__*/_jsx(Button,{className:\"mt-2\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-reply text-dark \"})})}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:isSelecteAll,onChange:handleSelecteAll})}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:items.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:`${selecteIds.includes(item.id)?\"table-success\":\"\"}`,children:[/*#__PURE__*/_jsx(\"td\",{scope:\"row\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:selecteIds.includes(item.id),onChange:()=>handleChangeRow(item.id,item.price)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:item.link})}),/*#__PURE__*/_jsx(\"td\",{children:item.productDisplayName}),/*#__PURE__*/_jsx(\"td\",{children:item.price}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",onClick:()=>{dispatch(removeItem(item.id));setSelecteIds([]);setIsSelecteAll(false);setArrayTotalPrice([]);},children:\"Delete\"})})]},item.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"contain\",children:items.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"total-price\",children:/*#__PURE__*/_jsxs(\"h5\",{children:[\"Total: \",/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",sumprice]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-btn\",children:[/*#__PURE__*/_jsx(Button,{className:\"btn-secondary text-right mr-5\",onClick:()=>{dispatch(clearItem());setSelecteIds([]);setIsSelecteAll(false);setArrayTotalPrice([]);},children:\"Clear Cart\"}),/*#__PURE__*/_jsx(Link,{to:\"/payment\",state:[selecteIds,sumprice],children:/*#__PURE__*/_jsx(Button,{className:\"btn-pay btn-secondary\",children:\"Payments\"})})]})]})})]})});}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","clearItem","removeItem","Button","ButtonGroup","Container","Input","Table","Link","jsx","_jsx","jsxs","_jsxs","Cart","dispatch","items","state","cart","selecteIds","setSelecteIds","isSelecteAll","setIsSelecteAll","arrayTotalPrice","setArrayTotalPrice","handleSelecteAll","newIsSelecteAll","map","item","id","price","handleChangeRow","updateSelecteIds","updateArrayTotalPrice","includes","console","log","filter","row","length","sumprice","reduce","total","value","children","to","className","type","checked","onChange","index","scope","src","link","productDisplayName","onClick"],"sources":["C:/Users/ADMIN/Desktop/JAVA/test/test-app/src/components/cart/Cart.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearItem, removeItem } from '../../redux/cartSlice'\nimport { Button, ButtonGroup, Container, Input, Table } from 'reactstrap'\nimport \"../../css/cart.css\"\nimport { Link } from 'react-router-dom'\n\nexport default function Cart() {\n  const dispatch = useDispatch()\n  const { items } = useSelector(state => state.cart)\n  const [selecteIds, setSelecteIds] = useState([])\n  const [isSelecteAll, setIsSelecteAll] =useState(false)\n  const [arrayTotalPrice, setArrayTotalPrice] = useState([])\n  const handleSelecteAll=()=>{\n       const newIsSelecteAll = !isSelecteAll\n       setIsSelecteAll(newIsSelecteAll)\n       if (newIsSelecteAll){\n        setSelecteIds(items.map((item)=>item.id))\n        setArrayTotalPrice(items.map((item)=>item.price))\n       }\n       else{\n        setSelecteIds([])\n        setArrayTotalPrice([])\n       }\n  }\n  const handleChangeRow=(id, price) =>{\n    let updateSelecteIds;\n    let updateArrayTotalPrice;\n\n    if  (!selecteIds.includes(id)){\n      //thêm id vào mảng\n      updateSelecteIds= [...selecteIds,id]\n      updateArrayTotalPrice= [...arrayTotalPrice, price]\n      console.log(selecteIds.includes(items.id));\n    }\n    else{\n      //Lọc ra bản ghi có id khác với id cần remove\n      updateSelecteIds = selecteIds.filter((row) => row !== id)\n      updateArrayTotalPrice = arrayTotalPrice.filter((row) => row !== price)\n    }\n    //Cập nhật lại state cho selecteIds\n    setSelecteIds(updateSelecteIds)\n    setArrayTotalPrice(updateArrayTotalPrice)\n    \n    //nếu mảng selecteIds. length = items.length =>setIsSelecteAll(true)\n    setIsSelecteAll(updateSelecteIds.length === items.length)\n  }\n\n  const sumprice = arrayTotalPrice.reduce((total, value) => {\n    return total + value;\n}, 0);\nconsole.log(selecteIds);\n\n\n  return (\n    <div>\n      <Container>\n      <Link to=\"/product\">\n      <Button className='mt-2'> \n      <i className='fa fa-reply text-dark '></i>\n      </Button>\n      </Link>\n        {/* {/* <h2>Carts</h2> */}\n        {/* {items.length === 0 && <h5>Cart is empty</h5>}  */}\n        <Table>\n          <thead>\n            <tr>\n              <th>\n                #\n              </th>\n              <th>\n                <Input type='checkbox' checked={isSelecteAll} onChange={handleSelecteAll}></Input>\n              </th>\n              <th>\n                {/* Image */}\n              </th>\n              <th>\n                Name\n              </th>\n              <th>\n                Price\n              </th>\n              {/* <th>\n                Quality\n              </th> */}\n              <th>\n\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              items.map((item, index) => (\n                <tr key={item.id} className={`${selecteIds.includes(item.id) ? \"table-success\":\"\"}`}  >\n                  <td scope=\"row\">\n                    {/* {item.id} */}\n                    {index + 1}\n                  </td>\n                  <td>\n                    <Input type=\"checkbox\" checked={selecteIds.includes(item.id)}  onChange={()=>handleChangeRow(item.id, item.price)}/>                \n                  </td>\n                  <td>\n                    <img src={item.link} />\n\n                  </td>\n                  <td>\n                    {item.productDisplayName}\n                  </td>\n                  <td>\n                    {item.price}\n                  </td>\n                  {/* <td>\n                    \n                                     // <Button onClick={()=>updateByID(item.id, -1)}> - </Button> \n                                     // <span>{\" \" + item.quality+\" \"} </span>\n                                     // <Button onClick={()=>updateByID(item.id, 1)}> + </Button>\n\n                                     <Button onClick={()=> dispatch(countUp())}> - </Button> \n                                     <span>{\" \" + count+\" \"} </span>\n                                    <Button onClick={()=> dispatch(countDown())}> + </Button>\n                  </td> */}\n                  <td>\n                    <Button className=\"btn-danger\"  onClick={() => {dispatch(removeItem((item.id))); setSelecteIds([]) ;setIsSelecteAll(false); setArrayTotalPrice([])}}>Delete</Button>\n\n                  </td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n        <div className='contain'>\n          {items.length > 0 && (\n            <div>\n              <div className='total-price'>\n\n                <h5>Total: <span>${sumprice}</span></h5>\n\n\n              </div>\n              {/* <ButtonGroup> */}\n              <div className='group-btn'>\n\n                <Button className='btn-secondary text-right mr-5' onClick={() => {dispatch(clearItem());setSelecteIds([]) ;setIsSelecteAll(false); setArrayTotalPrice([])}}>Clear Cart</Button>\n                \n                <Link to='/payment' state={[selecteIds, sumprice]} >\n                <Button className='btn-pay btn-secondary'>Payments</Button>\n                </Link>\n                \n              {/* </ButtonGroup> */}\n              </div>\n            </div>\n          )}\n\n        </div>\n\n      </Container>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}